apply plugin: 'com.android.application'

def androidCof = rootProject.ext.android;

android {
    compileSdkVersion androidCof.compileSdkVersion
    buildToolsVersion androidCof.buildToolsVersion

    //.jpg -> .png
    aaptOptions {
        cruncherEnabled = false;
        useNewCruncher = false;
    }

    defaultConfig {
        applicationId androidCof.applicationId
        minSdkVersion androidCof.minSdkVersion
        targetSdkVersion androidCof.targetSdkVersion
        versionCode androidCof.versionCode
        versionName  androidCof.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        manifestPlaceholders = [PGYER_APPID: "${PGYER_APPID_VALUE}"]
    }

    signingConfigs {
        release {
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storeFile file(STORE_FILE)
            storePassword STORE_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    "Epsilon-${variant.buildType.name}-${variant.versionName}.apk".toLowerCase())
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'jsr305'
    })
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["support-v4"]
    compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["constraint"]
    compile rootProject.ext.dependencies["recyclerview"]
    compile rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["converter-gson"]
    compile rootProject.ext.dependencies["adapter-rxjava"]
    compile rootProject.ext.dependencies["okhttp"]
    compile rootProject.ext.dependencies["rxandroid"]
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["glide-transformations"]
    compile rootProject.ext.dependencies["Android-SpinKit"]
    compile rootProject.ext.dependencies["eventbus"]
    compile rootProject.ext.dependencies["jsoup"]
    compile rootProject.ext.dependencies["PhotoView"]
    compile rootProject.ext.dependencies["statusbaruitl"]
    compile rootProject.ext.dependencies["permissionsdispatcher"]
    annotationProcessor rootProject.ext.dependencies["permissionsdispatcher-processor"]
    compile rootProject.ext.dependencies["rxerrorhandler"]
    compile rootProject.ext.dependencies["utilcode"]
    compile rootProject.ext.dependencies["material-dialogs"]
    compile rootProject.ext.dependencies["bga-swipebacklayout"]
    compile rootProject.ext.dependencies["multitype"]
    compile rootProject.ext.dependencies["pgyersdk"]
    compile rootProject.ext.dependencies["RxCache"]
    compile rootProject.ext.dependencies["RxCache-gson"]
    testCompile rootProject.ext.dependencies["junit"]

}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '25.3.1'
            }
        }
    }
}
